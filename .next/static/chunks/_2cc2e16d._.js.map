{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/KTTKPM/violence_detection/violence_detection/violence-detection-nextjs/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file://F%3A/KTTKPM/violence_detection/violence_detection/violence-detection-nextjs/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file://F%3A/KTTKPM/violence_detection/violence_detection/violence-detection-nextjs/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/70\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file://F%3A/KTTKPM/violence_detection/violence_detection/violence-detection-nextjs/app/samples/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Upload, Play, Trash2, Download, Plus, Filter, CheckCircle, XCircle } from \"lucide-react\"\r\nimport { getSampleFactory, type Sample } from \"@/lib/factories/sample-factory\"\r\n\r\nexport default function Samples() {\r\n  const [samples, setSamples] = useState<Sample[]>([])\r\n  const [filterType, setFilterType] = useState<\"all\" | \"Violence\" | \"Non-Violence\">(\"all\")\r\n  const [filterStatus, setFilterStatus] = useState<\"all\" | \"verified\" | \"unverified\">(\"all\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n  const sampleFactory = getSampleFactory()\r\n\r\n  useEffect(() => {\r\n    // Load samples from the factory\r\n    setSamples(sampleFactory.getAvailableSamples())\r\n  }, [])\r\n\r\n  const filteredSamples = samples.filter((sample) => {\r\n    // Filter by type\r\n    if (filterType !== \"all\" && sample.type !== filterType) {\r\n      return false\r\n    }\r\n\r\n    // Filter by status\r\n    if (filterStatus === \"verified\" && !sample.verified) {\r\n      return false\r\n    }\r\n    if (filterStatus === \"unverified\" && sample.verified) {\r\n      return false\r\n    }\r\n\r\n    // Filter by search term\r\n    if (searchTerm && !sample.name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  })\r\n\r\n  const handleVerifySample = (sampleId: string, verified: boolean) => {\r\n    const success = sampleFactory.updateSampleVerification(sampleId, verified)\r\n    if (success) {\r\n      // Update the samples list\r\n      setSamples(sampleFactory.getAvailableSamples())\r\n    }\r\n  }\r\n\r\n  const handleCreateSample = (type: \"Violence\" | \"Non-Violence\", name: string, duration: string) => {\r\n    const newSample = sampleFactory.createSample(type, name, duration)\r\n    // Update the samples list\r\n    setSamples(sampleFactory.getAvailableSamples())\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-6\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Sample Management</h1>\r\n\r\n      <Tabs defaultValue=\"all\">\r\n        <TabsList className=\"grid w-full grid-cols-4 mb-6\">\r\n          <TabsTrigger value=\"all\">All Samples</TabsTrigger>\r\n          <TabsTrigger value=\"violence\">Violence Samples</TabsTrigger>\r\n          <TabsTrigger value=\"non-violence\">Non-Violence Samples</TabsTrigger>\r\n          <TabsTrigger value=\"upload\">Upload New</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"all\">\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Button variant=\"outline\" size=\"sm\">\r\n                <Filter className=\"h-4 w-4 mr-2\" />\r\n                Filter\r\n              </Button>\r\n              <select\r\n                className=\"p-2 border rounded-md\"\r\n                value={filterType}\r\n                onChange={(e) => setFilterType(e.target.value as any)}\r\n              >\r\n                <option value=\"all\">All Types</option>\r\n                <option value=\"Violence\">Violence</option>\r\n                <option value=\"Non-Violence\">Non-Violence</option>\r\n              </select>\r\n              <select\r\n                className=\"p-2 border rounded-md\"\r\n                value={filterStatus}\r\n                onChange={(e) => setFilterStatus(e.target.value as any)}\r\n              >\r\n                <option value=\"all\">All Status</option>\r\n                <option value=\"verified\">Verified</option>\r\n                <option value=\"unverified\">Unverified</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-2\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search samples...\"\r\n                className=\"p-2 border rounded-md\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n              <Button variant=\"outline\" size=\"sm\">\r\n                Search\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            {filteredSamples.map((sample) => (\r\n              <Card key={sample.id}>\r\n                <CardHeader className=\"pb-2\">\r\n                  <div className=\"flex justify-between items-start\">\r\n                    <div>\r\n                      <CardTitle>{sample.name}</CardTitle>\r\n                      <CardDescription>\r\n                        {sample.type} Sample • {sample.duration}\r\n                      </CardDescription>\r\n                    </div>\r\n                    <Badge variant={sample.type === \"Violence\" ? \"destructive\" : \"default\"}>{sample.type}</Badge>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"aspect-video bg-gray-200 rounded-md flex items-center justify-center mb-4\">\r\n                    <Play className=\"h-8 w-8 text-gray-400\" />\r\n                  </div>\r\n\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <div>\r\n                      <span className=\"text-gray-500\">Added:</span>\r\n                      <p>{sample.date}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"text-gray-500\">Status:</span>\r\n                      <div className=\"flex items-center\">\r\n                        {sample.verified ? (\r\n                          <>\r\n                            <CheckCircle className=\"h-4 w-4 text-green-500 mr-1\" />\r\n                            <span>Verified</span>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <XCircle className=\"h-4 w-4 text-yellow-500 mr-1\" />\r\n                            <span>Unverified</span>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n                <CardFooter className=\"flex justify-between\">\r\n                  <Button variant=\"outline\" size=\"sm\">\r\n                    <Play className=\"h-4 w-4 mr-2\" />\r\n                    Play\r\n                  </Button>\r\n                  {!sample.verified ? (\r\n                    <Button variant=\"outline\" size=\"sm\" onClick={() => handleVerifySample(sample.id, true)}>\r\n                      <CheckCircle className=\"h-4 w-4 mr-2\" />\r\n                      Verify\r\n                    </Button>\r\n                  ) : (\r\n                    <Button variant=\"outline\" size=\"sm\">\r\n                      <Download className=\"h-4 w-4 mr-2\" />\r\n                      Download\r\n                    </Button>\r\n                  )}\r\n                  <Button variant=\"outline\" size=\"sm\" className=\"text-red-500 hover:text-red-700\">\r\n                    <Trash2 className=\"h-4 w-4 mr-2\" />\r\n                    Delete\r\n                  </Button>\r\n                </CardFooter>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"violence\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            {samples\r\n              .filter((sample) => sample.type === \"Violence\")\r\n              .map((sample) => (\r\n                <Card key={sample.id}>\r\n                  <CardHeader className=\"pb-2\">\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <div>\r\n                        <CardTitle>{sample.name}</CardTitle>\r\n                        <CardDescription>\r\n                          {sample.type} Sample • {sample.duration}\r\n                        </CardDescription>\r\n                      </div>\r\n                      <Badge variant=\"destructive\">{sample.type}</Badge>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"aspect-video bg-gray-200 rounded-md flex items-center justify-center mb-4\">\r\n                      <Play className=\"h-8 w-8 text-gray-400\" />\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <div>\r\n                        <span className=\"text-gray-500\">Added:</span>\r\n                        <p>{sample.date}</p>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-gray-500\">Status:</span>\r\n                        <div className=\"flex items-center\">\r\n                          {sample.verified ? (\r\n                            <>\r\n                              <CheckCircle className=\"h-4 w-4 text-green-500 mr-1\" />\r\n                              <span>Verified</span>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <XCircle className=\"h-4 w-4 text-yellow-500 mr-1\" />\r\n                              <span>Unverified</span>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                  <CardFooter className=\"flex justify-between\">\r\n                    <Button variant=\"outline\" size=\"sm\">\r\n                      <Play className=\"h-4 w-4 mr-2\" />\r\n                      Play\r\n                    </Button>\r\n                    {!sample.verified ? (\r\n                      <Button variant=\"outline\" size=\"sm\" onClick={() => handleVerifySample(sample.id, true)}>\r\n                        <CheckCircle className=\"h-4 w-4 mr-2\" />\r\n                        Verify\r\n                      </Button>\r\n                    ) : (\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Download className=\"h-4 w-4 mr-2\" />\r\n                        Download\r\n                      </Button>\r\n                    )}\r\n                    <Button variant=\"outline\" size=\"sm\" className=\"text-red-500 hover:text-red-700\">\r\n                      <Trash2 className=\"h-4 w-4 mr-2\" />\r\n                      Delete\r\n                    </Button>\r\n                  </CardFooter>\r\n                </Card>\r\n              ))}\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"non-violence\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            {samples\r\n              .filter((sample) => sample.type === \"Non-Violence\")\r\n              .map((sample) => (\r\n                <Card key={sample.id}>\r\n                  <CardHeader className=\"pb-2\">\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <div>\r\n                        <CardTitle>{sample.name}</CardTitle>\r\n                        <CardDescription>\r\n                          {sample.type} Sample • {sample.duration}\r\n                        </CardDescription>\r\n                      </div>\r\n                      <Badge>{sample.type}</Badge>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"aspect-video bg-gray-200 rounded-md flex items-center justify-center mb-4\">\r\n                      <Play className=\"h-8 w-8 text-gray-400\" />\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <div>\r\n                        <span className=\"text-gray-500\">Added:</span>\r\n                        <p>{sample.date}</p>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-gray-500\">Status:</span>\r\n                        <div className=\"flex items-center\">\r\n                          {sample.verified ? (\r\n                            <>\r\n                              <CheckCircle className=\"h-4 w-4 text-green-500 mr-1\" />\r\n                              <span>Verified</span>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <XCircle className=\"h-4 w-4 text-yellow-500 mr-1\" />\r\n                              <span>Unverified</span>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                  <CardFooter className=\"flex justify-between\">\r\n                    <Button variant=\"outline\" size=\"sm\">\r\n                      <Play className=\"h-4 w-4 mr-2\" />\r\n                      Play\r\n                    </Button>\r\n                    {!sample.verified ? (\r\n                      <Button variant=\"outline\" size=\"sm\" onClick={() => handleVerifySample(sample.id, true)}>\r\n                        <CheckCircle className=\"h-4 w-4 mr-2\" />\r\n                        Verify\r\n                      </Button>\r\n                    ) : (\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Download className=\"h-4 w-4 mr-2\" />\r\n                        Download\r\n                      </Button>\r\n                    )}\r\n                    <Button variant=\"outline\" size=\"sm\" className=\"text-red-500 hover:text-red-700\">\r\n                      <Trash2 className=\"h-4 w-4 mr-2\" />\r\n                      Delete\r\n                    </Button>\r\n                  </CardFooter>\r\n                </Card>\r\n              ))}\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"upload\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Upload Sample Videos</CardTitle>\r\n                <CardDescription>Add new samples to your training dataset</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:bg-gray-50 transition-colors\">\r\n                  <Upload className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n                  <p className=\"mt-2 text-sm text-gray-600\">Click to upload or drag and drop</p>\r\n                  <p className=\"text-xs text-gray-500\">MP4, AVI, MOV up to 100MB</p>\r\n                </div>\r\n\r\n                <div className=\"mt-6 space-y-4\">\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Sample Type</label>\r\n                    <select className=\"w-full p-2 border rounded-md\">\r\n                      <option value=\"violence\">Violence</option>\r\n                      <option value=\"non-violence\">Non-Violence</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Sample Name</label>\r\n                    <input type=\"text\" placeholder=\"Enter sample name\" className=\"w-full p-2 border rounded-md\" />\r\n                  </div>\r\n\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Description (Optional)</label>\r\n                    <textarea\r\n                      placeholder=\"Enter description\"\r\n                      className=\"w-full p-2 border rounded-md\"\r\n                      rows={3}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n              <CardFooter>\r\n                <Button className=\"w-full\" onClick={() => handleCreateSample(\"Violence\", \"New Sample\", \"10s\")}>\r\n                  <Plus className=\"h-4 w-4 mr-2\" />\r\n                  Upload Sample\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Extract from Existing Videos</CardTitle>\r\n                <CardDescription>Extract sample clips from longer videos</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:bg-gray-50 transition-colors\">\r\n                  <Upload className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n                  <p className=\"mt-2 text-sm text-gray-600\">Upload a longer video to extract samples</p>\r\n                  <p className=\"text-xs text-gray-500\">MP4, AVI, MOV up to 500MB</p>\r\n                </div>\r\n\r\n                <div className=\"mt-6 space-y-4\">\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Extraction Method</label>\r\n                    <select className=\"w-full p-2 border rounded-md\">\r\n                      <option value=\"manual\">Manual Selection</option>\r\n                      <option value=\"auto\">Automatic Detection</option>\r\n                      <option value=\"interval\">Fixed Intervals</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Sample Duration (seconds)</label>\r\n                    <input type=\"number\" defaultValue=\"10\" min=\"1\" max=\"60\" className=\"w-full p-2 border rounded-md\" />\r\n                  </div>\r\n\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Default Sample Type</label>\r\n                    <select className=\"w-full p-2 border rounded-md\">\r\n                      <option value=\"violence\">Violence</option>\r\n                      <option value=\"non-violence\">Non-Violence</option>\r\n                      <option value=\"unclassified\">Unclassified</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n              <CardFooter>\r\n                <Button className=\"w-full\">\r\n                  <Plus className=\"h-4 w-4 mr-2\" />\r\n                  Extract Samples\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}