{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/KTTKPM/violence_detection/violence_detection/violence-detection-nextjs/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file://F%3A/KTTKPM/violence_detection/violence_detection/violence-detection-nextjs/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file://F%3A/KTTKPM/violence_detection/violence_detection/violence-detection-nextjs/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\"relative h-4 w-full overflow-hidden rounded-full bg-secondary\", className)}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iEAAiE;QAC9E,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file://F%3A/KTTKPM/violence_detection/violence_detection/violence-detection-nextjs/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/70\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file://F%3A/KTTKPM/violence_detection/violence_detection/violence-detection-nextjs/lib/factories/model-factory.ts"],"sourcesContent":["// Abstract Model Factory\r\nexport interface ModelData {\r\n  videoFile: File | Blob\r\n}\r\n\r\nexport interface ModelPredictionResult {\r\n  fight?: boolean\r\n  percentageoffight?: string\r\n  movement?: boolean\r\n  confidence?: string\r\n  behavior?: \"violent\" | \"normal\"\r\n  processing_time_ms: string\r\n}\r\n\r\nexport interface ModelInfo {\r\n  id: string\r\n  name: string\r\n  type: string\r\n  accuracy: number\r\n  status: \"active\" | \"inactive\"\r\n  lastUpdated: string\r\n  size: string\r\n}\r\n\r\nexport interface ModelConfig {\r\n  name?: string\r\n  accuracy?: number\r\n  size?: string\r\n}\r\n\r\n// Abstract Model Interface\r\nexport interface Model {\r\n  id: string\r\n  name: string\r\n  type: string\r\n  accuracy: number\r\n  predict(data: ModelData): Promise<ModelPredictionResult>\r\n  getInfo(): ModelInfo\r\n}\r\n\r\n// Abstract Factory\r\nexport abstract class ModelFactory {\r\n  abstract createModel(type: string, config?: ModelConfig): Model\r\n  abstract getAvailableModels(): ModelInfo[]\r\n}\r\n\r\n// Concrete Violence Model\r\nexport class ViolenceModel implements Model {\r\n  id: string\r\n  name: string\r\n  type: string\r\n  accuracy: number\r\n  status: \"active\" | \"inactive\"\r\n  lastUpdated: string\r\n  size: string\r\n\r\n  constructor(\r\n    id: string,\r\n    name: string,\r\n    accuracy: number,\r\n    status: \"active\" | \"inactive\",\r\n    lastUpdated: string,\r\n    size: string,\r\n  ) {\r\n    this.id = id\r\n    this.name = name\r\n    this.type = \"Violence Detection\"\r\n    this.accuracy = accuracy\r\n    this.status = status\r\n    this.lastUpdated = lastUpdated\r\n    this.size = size\r\n  }\r\n\r\n  async predict(data: ModelData): Promise<ModelPredictionResult> {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        const isFight = Math.random() > 0.5\r\n        resolve({\r\n          fight: isFight,\r\n          percentageoffight: (isFight ? 70 + Math.random() * 25 : Math.random() * 30).toFixed(2),\r\n          processing_time_ms: (Math.random() * 1000 + 500).toFixed(0),\r\n        })\r\n      }, 2000)\r\n    })\r\n  }\r\n\r\n  getInfo(): ModelInfo {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      type: this.type,\r\n      accuracy: this.accuracy,\r\n      status: this.status,\r\n      lastUpdated: this.lastUpdated,\r\n      size: this.size,\r\n    }\r\n  }\r\n}\r\n\r\n// Concrete Movement Model\r\nexport class MovementModel implements Model {\r\n  id: string\r\n  name: string\r\n  type: string\r\n  accuracy: number\r\n  status: \"active\" | \"inactive\"\r\n  lastUpdated: string\r\n  size: string\r\n\r\n  constructor(\r\n    id: string,\r\n    name: string,\r\n    accuracy: number,\r\n    status: \"active\" | \"inactive\",\r\n    lastUpdated: string,\r\n    size: string,\r\n  ) {\r\n    this.id = id\r\n    this.name = name\r\n    this.type = \"Movement Detection\"\r\n    this.accuracy = accuracy\r\n    this.status = status\r\n    this.lastUpdated = lastUpdated\r\n    this.size = size\r\n  }\r\n\r\n  async predict(data: ModelData): Promise<ModelPredictionResult> {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          movement: Math.random() > 0.3,\r\n          confidence: (70 + Math.random() * 25).toFixed(2),\r\n          processing_time_ms: (Math.random() * 800 + 300).toFixed(0),\r\n        })\r\n      }, 1500)\r\n    })\r\n  }\r\n\r\n  getInfo(): ModelInfo {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      type: this.type,\r\n      accuracy: this.accuracy,\r\n      status: this.status,\r\n      lastUpdated: this.lastUpdated,\r\n      size: this.size,\r\n    }\r\n  }\r\n}\r\n\r\n// Concrete Behavior Model\r\nexport class BehaviorModel implements Model {\r\n  id: string\r\n  name: string\r\n  type: string\r\n  accuracy: number\r\n  status: \"active\" | \"inactive\"\r\n  lastUpdated: string\r\n  size: string\r\n\r\n  constructor(\r\n    id: string,\r\n    name: string,\r\n    accuracy: number,\r\n    status: \"active\" | \"inactive\",\r\n    lastUpdated: string,\r\n    size: string,\r\n  ) {\r\n    this.id = id\r\n    this.name = name\r\n    this.type = \"Behavior Analysis\"\r\n    this.accuracy = accuracy\r\n    this.status = status\r\n    this.lastUpdated = lastUpdated\r\n    this.size = size\r\n  }\r\n\r\n  async predict(data: ModelData): Promise<ModelPredictionResult> {\r\n    // Implementation for behavior analysis\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          behavior: Math.random() > 0.5 ? \"violent\" : \"normal\",\r\n          confidence: (70 + Math.random() * 25).toFixed(2),\r\n          processing_time_ms: (Math.random() * 1200 + 400).toFixed(0),\r\n        })\r\n      }, 2500)\r\n    })\r\n  }\r\n\r\n  getInfo(): ModelInfo {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      type: this.type,\r\n      accuracy: this.accuracy,\r\n      status: this.status,\r\n      lastUpdated: this.lastUpdated,\r\n      size: this.size,\r\n    }\r\n  }\r\n}\r\n\r\n// Concrete Factory\r\nexport class ConcreteModelFactory extends ModelFactory {\r\n  private models: Model[] = []\r\n\r\n  constructor() {\r\n    super()\r\n    this.models.push(\r\n      new ViolenceModel(\"model1\", \"Default Violence Model\", 94.7, \"active\", \"2023-12-15\", \"245 MB\"),\r\n      new ViolenceModel(\"model2\", \"Enhanced Violence Model\", 96.2, \"active\", \"2024-02-20\", \"312 MB\"),\r\n      new MovementModel(\"model3\", \"Person Movement Model\", 92.5, \"inactive\", \"2023-11-05\", \"178 MB\"),\r\n      new BehaviorModel(\"model4\", \"Custom Behavior Model 1\", 88.3, \"active\", \"2024-01-10\", \"203 MB\"),\r\n    )\r\n  }\r\n\r\n  createModel(type: string, config?: ModelConfig): Model {\r\n    const modelConfig: ModelConfig = config || {}\r\n    const modelId = `model${this.models.length + 1}`\r\n    const modelName =\r\n      modelConfig.name || `New ${type.charAt(0).toUpperCase() + type.slice(1)} Model ${this.models.length + 1}`\r\n    const modelAccuracy = modelConfig.accuracy || 90.0\r\n    const modelSize = modelConfig.size || \"250 MB\"\r\n    const currentDate = new Date().toISOString().split(\"T\")[0]\r\n\r\n    let newModel: Model\r\n\r\n    switch (type) {\r\n      case \"violence\":\r\n        newModel = new ViolenceModel(modelId, modelName, modelAccuracy, \"active\", currentDate, modelSize)\r\n        break\r\n      case \"movement\":\r\n        newModel = new MovementModel(modelId, modelName, modelAccuracy, \"active\", currentDate, modelSize)\r\n        break\r\n      case \"behavior\":\r\n        newModel = new BehaviorModel(modelId, modelName, modelAccuracy, \"active\", currentDate, modelSize)\r\n        break\r\n      default:\r\n        throw new Error(`Unknown model type: ${type}`)\r\n    }\r\n\r\n    this.models.push(newModel)\r\n    return newModel\r\n  }\r\n\r\n  getAvailableModels(): ModelInfo[] {\r\n    return this.models.map((model) => model.getInfo())\r\n  }\r\n\r\n  getModelById(id: string): Model | undefined {\r\n    return this.models.find((model) => model.id === id)\r\n  }\r\n\r\n  addModel(model: Model): void {\r\n    this.models.push(model)\r\n  }\r\n\r\n  updateModelStatus(id: string, status: \"active\" | \"inactive\"): boolean {\r\n    const model = this.models.find((m) => m.id === id)\r\n    if (model) {\r\n      // Use type assertion to access status property\r\n      ;(model as ViolenceModel | MovementModel | BehaviorModel).status = status\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\n// Singleton instance\r\nlet modelFactoryInstance: ConcreteModelFactory | null = null\r\n\r\nexport function getModelFactory(): ConcreteModelFactory {\r\n  if (!modelFactoryInstance) {\r\n    modelFactoryInstance = new ConcreteModelFactory()\r\n  }\r\n  return modelFactoryInstance\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":["file://F%3A/KTTKPM/violence_detection/violence_detection/violence-detection-nextjs/lib/factories/training-factory.ts"],"sourcesContent":["import { getModelFactory } from \"./model-factory\"\r\nimport type { Sample } from \"./sample-factory\"\r\n\r\n// Abstract Training Session\r\nexport type TrainingType = \"New Training\" | \"Fine-tuning\"\r\nexport type TrainingStatus = \"in-progress\" | \"completed\" | \"failed\"\r\n\r\nexport interface TrainingInfo {\r\n  id: string\r\n  modelName: string\r\n  type: TrainingType\r\n  startTime: Date\r\n  endTime?: Date\r\n  status: TrainingStatus\r\n  accuracy?: number\r\n  progress: number\r\n  epoch: number\r\n  loss: number\r\n}\r\n\r\nexport interface TrainingSession extends TrainingInfo {\r\n  startTraining(): void\r\n  stopTraining(): void\r\n  getProgress(): number\r\n}\r\n\r\n// Abstract Factory\r\nexport abstract class TrainingFactory {\r\n  abstract createTrainingSession(modelName: string, type: TrainingType, samples: Sample[]): TrainingSession\r\n  abstract getTrainingSessions(): TrainingSession[]\r\n}\r\n\r\n// Concrete Training Session\r\nexport class ConcreteTrainingSession implements TrainingSession {\r\n  id: string\r\n  modelName: string\r\n  type: TrainingType\r\n  startTime: Date\r\n  endTime?: Date\r\n  status: TrainingStatus\r\n  accuracy?: number\r\n  progress: number\r\n  epoch: number\r\n  loss: number\r\n  private intervalId?: NodeJS.Timeout\r\n  private samples: Sample[]\r\n\r\n  constructor(id: string, modelName: string, type: TrainingType, samples: Sample[]) {\r\n    this.id = id\r\n    this.modelName = modelName\r\n    this.type = type\r\n    this.startTime = new Date()\r\n    this.status = \"in-progress\"\r\n    this.progress = 0\r\n    this.epoch = 0\r\n    this.loss = 0.8\r\n    this.samples = samples\r\n  }\r\n\r\n  startTraining(): void {\r\n    // Simulate training progress\r\n    this.intervalId = setInterval(() => {\r\n      this.progress += 1\r\n\r\n      // Update epoch every 10% progress\r\n      if (Math.floor((this.progress - 1) / 10) < Math.floor(this.progress / 10)) {\r\n        this.epoch = Math.floor(this.progress / 10)\r\n        this.loss = Math.max(0.1, this.loss - 0.07)\r\n      }\r\n\r\n      if (this.progress >= 100) {\r\n        this.completeTraining()\r\n      }\r\n    }, 500)\r\n  }\r\n\r\n  stopTraining(): void {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId)\r\n      this.status = \"failed\"\r\n    }\r\n  }\r\n\r\n  private completeTraining(): void {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId)\r\n    }\r\n\r\n    this.status = \"completed\"\r\n    this.endTime = new Date()\r\n    this.progress = 100\r\n    this.accuracy = 85 + Math.random() * 10\r\n\r\n    // Create a new model based on the training\r\n    const modelFactory = getModelFactory()\r\n    const modelType = this.modelName.toLowerCase().includes(\"violence\")\r\n      ? \"violence\"\r\n      : this.modelName.toLowerCase().includes(\"movement\")\r\n        ? \"movement\"\r\n        : \"behavior\"\r\n\r\n    const newModel = modelFactory.createModel(modelType, {\r\n      name: this.modelName,\r\n      accuracy: this.accuracy,\r\n    })\r\n  }\r\n\r\n  getProgress(): number {\r\n    return this.progress\r\n  }\r\n}\r\n\r\n// Concrete Factory\r\nexport class ConcreteTrainingFactory extends TrainingFactory {\r\n  private trainingSessions: TrainingSession[] = []\r\n\r\n  constructor() {\r\n    super()\r\n    // Initialize with some completed training sessions\r\n    this.trainingSessions.push(\r\n      {\r\n        id: \"training1\",\r\n        modelName: \"Enhanced Violence Model\",\r\n        type: \"New Training\",\r\n        startTime: new Date(\"2024-03-15T10:00:00\"),\r\n        endTime: new Date(\"2024-03-15T13:45:00\"),\r\n        status: \"completed\",\r\n        accuracy: 96.2,\r\n        progress: 100,\r\n        epoch: 10,\r\n        loss: 0.1,\r\n        startTraining: () => {},\r\n        stopTraining: () => {},\r\n        getProgress: () => 100,\r\n      },\r\n      {\r\n        id: \"training2\",\r\n        modelName: \"Custom Behavior Model 1\",\r\n        type: \"Fine-tuning\",\r\n        startTime: new Date(\"2024-02-28T14:00:00\"),\r\n        endTime: new Date(\"2024-02-28T15:20:00\"),\r\n        status: \"completed\",\r\n        accuracy: 88.3,\r\n        progress: 100,\r\n        epoch: 10,\r\n        loss: 0.15,\r\n        startTraining: () => {},\r\n        stopTraining: () => {},\r\n        getProgress: () => 100,\r\n      },\r\n      {\r\n        id: \"training3\",\r\n        modelName: \"Movement Detection v2\",\r\n        type: \"New Training\",\r\n        startTime: new Date(\"2024-02-10T09:30:00\"),\r\n        endTime: new Date(\"2024-02-10T11:45:00\"),\r\n        status: \"failed\",\r\n        progress: 45,\r\n        epoch: 4,\r\n        loss: 0.5,\r\n        startTraining: () => {},\r\n        stopTraining: () => {},\r\n        getProgress: () => 45,\r\n      },\r\n    )\r\n  }\r\n\r\n  createTrainingSession(modelName: string, type: TrainingType, samples: Sample[]): TrainingSession {\r\n    const newSession = new ConcreteTrainingSession(\r\n      `training${this.trainingSessions.length + 1}`,\r\n      modelName,\r\n      type,\r\n      samples,\r\n    )\r\n\r\n    this.trainingSessions.push(newSession)\r\n    return newSession\r\n  }\r\n\r\n  getTrainingSessions(): TrainingSession[] {\r\n    return [...this.trainingSessions]\r\n  }\r\n\r\n  getTrainingSessionById(id: string): TrainingSession | undefined {\r\n    return this.trainingSessions.find((session) => session.id === id)\r\n  }\r\n}\r\n\r\n// Singleton instance\r\nlet trainingFactoryInstance: ConcreteTrainingFactory | null = null\r\n\r\nexport function getTrainingFactory(): ConcreteTrainingFactory {\r\n  if (!trainingFactoryInstance) {\r\n    trainingFactoryInstance = new ConcreteTrainingFactory()\r\n  }\r\n  return trainingFactoryInstance\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 649, "column": 0}, "map": {"version":3,"sources":["file://F%3A/KTTKPM/violence_detection/violence_detection/violence-detection-nextjs/lib/factories/sample-factory.ts"],"sourcesContent":["// Abstract Sample\r\nexport type SampleType = \"Violence\" | \"Non-Violence\"\r\n\r\nexport interface SampleInfo {\r\n  id: string\r\n  name: string\r\n  type: SampleType\r\n  duration: string\r\n  date: string\r\n  verified: boolean\r\n}\r\n\r\nexport interface Sample extends SampleInfo {\r\n  getVideoUrl(): string | null\r\n}\r\n\r\n// Abstract Factory\r\nexport abstract class SampleFactory {\r\n  abstract createSample(type: SampleType, name: string, duration: string, videoUrl?: string): Sample\r\n  abstract getAvailableSamples(): Sample[]\r\n}\r\n\r\n// Concrete Sample\r\nexport class ConcreteSample implements Sample {\r\n  id: string\r\n  name: string\r\n  type: SampleType\r\n  duration: string\r\n  date: string\r\n  verified: boolean\r\n  private videoUrl: string | null\r\n\r\n  constructor(\r\n    id: string,\r\n    name: string,\r\n    type: SampleType,\r\n    duration: string,\r\n    date: string,\r\n    verified: boolean,\r\n    videoUrl: string | null = null,\r\n  ) {\r\n    this.id = id\r\n    this.name = name\r\n    this.type = type\r\n    this.duration = duration\r\n    this.date = date\r\n    this.verified = verified\r\n    this.videoUrl = videoUrl\r\n  }\r\n\r\n  getVideoUrl(): string | null {\r\n    return this.videoUrl\r\n  }\r\n}\r\n\r\n// Concrete Factory\r\nexport class ConcreteSampleFactory extends SampleFactory {\r\n  private samples: Sample[] = []\r\n\r\n  constructor() {\r\n    super()\r\n    // Initialize with some default samples\r\n    this.samples.push(\r\n      new ConcreteSample(\"sample1\", \"Fight Scene 1\", \"Violence\", \"12s\", \"2024-01-15\", true, \"/samples/fight1.mp4\"),\r\n      new ConcreteSample(\r\n        \"sample2\",\r\n        \"Argument Escalation\",\r\n        \"Violence\",\r\n        \"8s\",\r\n        \"2024-02-03\",\r\n        true,\r\n        \"/samples/argument.mp4\",\r\n      ),\r\n      new ConcreteSample(\r\n        \"sample3\",\r\n        \"Normal Walking\",\r\n        \"Non-Violence\",\r\n        \"15s\",\r\n        \"2024-01-20\",\r\n        true,\r\n        \"/samples/walking.mp4\",\r\n      ),\r\n      new ConcreteSample(\r\n        \"sample4\",\r\n        \"Group Discussion\",\r\n        \"Non-Violence\",\r\n        \"20s\",\r\n        \"2024-02-10\",\r\n        false,\r\n        \"/samples/discussion.mp4\",\r\n      ),\r\n      new ConcreteSample(\r\n        \"sample5\",\r\n        \"Physical Altercation\",\r\n        \"Violence\",\r\n        \"7s\",\r\n        \"2024-03-05\",\r\n        true,\r\n        \"/samples/altercation.mp4\",\r\n      ),\r\n      new ConcreteSample(\r\n        \"sample6\",\r\n        \"Running in Hallway\",\r\n        \"Non-Violence\",\r\n        \"10s\",\r\n        \"2024-02-25\",\r\n        false,\r\n        \"/samples/running.mp4\",\r\n      ),\r\n    )\r\n  }\r\n\r\n  createSample(type: SampleType, name: string, duration: string, videoUrl?: string): Sample {\r\n    const newSample = new ConcreteSample(\r\n      `sample${this.samples.length + 1}`,\r\n      name,\r\n      type,\r\n      duration,\r\n      new Date().toISOString().split(\"T\")[0],\r\n      false,\r\n      videoUrl || null,\r\n    )\r\n    this.samples.push(newSample)\r\n    return newSample\r\n  }\r\n\r\n  getAvailableSamples(): Sample[] {\r\n    return [...this.samples]\r\n  }\r\n\r\n  getSampleById(id: string): Sample | undefined {\r\n    return this.samples.find((sample) => sample.id === id)\r\n  }\r\n\r\n  updateSampleVerification(id: string, verified: boolean): boolean {\r\n    const sample = this.samples.find((s) => s.id === id)\r\n    if (sample) {\r\n      ;(sample as ConcreteSample).verified = verified\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\n// Singleton instance\r\nlet sampleFactoryInstance: ConcreteSampleFactory | null = null\r\n\r\nexport function getSampleFactory(): ConcreteSampleFactory {\r\n  if (!sampleFactoryInstance) {\r\n    sampleFactoryInstance = new ConcreteSampleFactory()\r\n  }\r\n  return sampleFactoryInstance\r\n}\r\n\r\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;;;;AAiBX,MAAe;AAGtB;AAGO,MAAM;IACX,GAAU;IACV,KAAY;IACZ,KAAgB;IAChB,SAAgB;IAChB,KAAY;IACZ,SAAiB;IACT,SAAuB;IAE/B,YACE,EAAU,EACV,IAAY,EACZ,IAAgB,EAChB,QAAgB,EAChB,IAAY,EACZ,QAAiB,EACjB,WAA0B,IAAI,CAC9B;QACA,IAAI,CAAC,EAAE,GAAG;QACV,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,QAAQ,GAAG;IAClB;IAEA,cAA6B;QAC3B,OAAO,IAAI,CAAC,QAAQ;IACtB;AACF;AAGO,MAAM,8BAA8B;IACjC,UAAoB,EAAE,CAAA;IAE9B,aAAc;QACZ,KAAK;QACL,uCAAuC;QACvC,IAAI,CAAC,OAAO,CAAC,IAAI,CACf,IAAI,eAAe,WAAW,iBAAiB,YAAY,OAAO,cAAc,MAAM,wBACtF,IAAI,eACF,WACA,uBACA,YACA,MACA,cACA,MACA,0BAEF,IAAI,eACF,WACA,kBACA,gBACA,OACA,cACA,MACA,yBAEF,IAAI,eACF,WACA,oBACA,gBACA,OACA,cACA,OACA,4BAEF,IAAI,eACF,WACA,wBACA,YACA,MACA,cACA,MACA,6BAEF,IAAI,eACF,WACA,sBACA,gBACA,OACA,cACA,OACA;IAGN;IAEA,aAAa,IAAgB,EAAE,IAAY,EAAE,QAAgB,EAAE,QAAiB,EAAU;QACxF,MAAM,YAAY,IAAI,eACpB,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,EAClC,MACA,MACA,UACA,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,EACtC,OACA,YAAY;QAEd,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAClB,OAAO;IACT;IAEA,sBAAgC;QAC9B,OAAO;eAAI,IAAI,CAAC,OAAO;SAAC;IAC1B;IAEA,cAAc,EAAU,EAAsB;QAC5C,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAW,OAAO,EAAE,KAAK;IACrD;IAEA,yBAAyB,EAAU,EAAE,QAAiB,EAAW;QAC/D,MAAM,SAAS,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;QACjD,IAAI,QAAQ;;YACR,OAA0B,QAAQ,GAAG;YACvC,OAAO;QACT;QACA,OAAO;IACT;AACF;AAEA,qBAAqB;AACrB,IAAI,wBAAsD;AAEnD,SAAS;IACd,IAAI,CAAC,uBAAuB;QAC1B,wBAAwB,IAAI;IAC9B;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 726, "column": 0}, "map": {"version":3,"sources":["file://F%3A/KTTKPM/violence_detection/violence_detection/violence-detection-nextjs/app/training/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport { Upload, Play, Pause, BarChart2, Save, RefreshCw } from \"lucide-react\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { getTrainingFactory, type TrainingSession } from \"@/lib/factories/training-factory\"\r\nimport { getSampleFactory } from \"@/lib/factories/sample-factory\"\r\nimport { getModelFactory } from \"@/lib/factories/model-factory\"\r\n\r\nexport default function Training() {\r\n  const [activeTraining, setActiveTraining] = useState<TrainingSession | null>(null)\r\n  const [trainingSessions, setTrainingSessions] = useState<TrainingSession[]>([])\r\n  const [newModelName, setNewModelName] = useState(\"New Violence Model\")\r\n  const [modelType, setModelType] = useState(\"violence\")\r\n  const [datasetType, setDatasetType] = useState(\"default\")\r\n  const [epochs, setEpochs] = useState(10)\r\n  const [batchSize, setBatchSize] = useState(32)\r\n\r\n  const trainingFactory = getTrainingFactory()\r\n  const sampleFactory = getSampleFactory()\r\n  const modelFactory = getModelFactory()\r\n\r\n  useEffect(() => {\r\n    // Load training sessions\r\n    setTrainingSessions(trainingFactory.getTrainingSessions())\r\n\r\n    // Set up interval to update progress\r\n    const interval = setInterval(() => {\r\n      if (activeTraining) {\r\n        const progress = activeTraining.getProgress()\r\n        if (progress >= 100) {\r\n          setActiveTraining(null)\r\n          // Refresh training sessions\r\n          setTrainingSessions(trainingFactory.getTrainingSessions())\r\n        } else {\r\n          // Force a re-render to update progress\r\n          setActiveTraining({ ...activeTraining })\r\n        }\r\n      }\r\n    }, 500)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [activeTraining])\r\n\r\n  const startTraining = () => {\r\n    // Get samples based on dataset type\r\n    const samples = sampleFactory.getAvailableSamples()\r\n\r\n    // Create a new training session\r\n    const newSession = trainingFactory.createTrainingSession(newModelName, \"New Training\", samples)\r\n\r\n    // Start the training\r\n    newSession.startTraining()\r\n    setActiveTraining(newSession)\r\n\r\n    // Update the training sessions list\r\n    setTrainingSessions(trainingFactory.getTrainingSessions())\r\n  }\r\n\r\n  const stopTraining = () => {\r\n    if (activeTraining) {\r\n      activeTraining.stopTraining()\r\n      setActiveTraining(null)\r\n      // Refresh training sessions\r\n      setTrainingSessions(trainingFactory.getTrainingSessions())\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-6\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Model Training</h1>\r\n\r\n      <Tabs defaultValue=\"new\">\r\n        <TabsList className=\"grid w-full grid-cols-3 mb-6\">\r\n          <TabsTrigger value=\"new\">New Training</TabsTrigger>\r\n          <TabsTrigger value=\"finetune\">Fine-tune Existing</TabsTrigger>\r\n          <TabsTrigger value=\"history\">Training History</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"new\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            <div className=\"md:col-span-2\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Train New Model</CardTitle>\r\n                  <CardDescription>Create and train a new violence detection model</CardDescription>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-6\">\r\n                  <div className=\"space-y-4\">\r\n                    <div className=\"grid w-full items-center gap-1.5\">\r\n                      <label className=\"text-sm font-medium\">Model Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter model name\"\r\n                        className=\"w-full p-2 border rounded-md\"\r\n                        value={newModelName}\r\n                        onChange={(e) => setNewModelName(e.target.value)}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"grid w-full items-center gap-1.5\">\r\n                      <label className=\"text-sm font-medium\">Model Type</label>\r\n                      <select\r\n                        className=\"w-full p-2 border rounded-md\"\r\n                        value={modelType}\r\n                        onChange={(e) => setModelType(e.target.value)}\r\n                      >\r\n                        <option value=\"violence\">Violence Detection</option>\r\n                        <option value=\"movement\">Movement Detection</option>\r\n                        <option value=\"behavior\">Behavior Analysis</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className=\"grid w-full items-center gap-1.5\">\r\n                      <label className=\"text-sm font-medium\">Training Dataset</label>\r\n                      <select\r\n                        className=\"w-full p-2 border rounded-md\"\r\n                        value={datasetType}\r\n                        onChange={(e) => setDatasetType(e.target.value)}\r\n                      >\r\n                        <option value=\"default\">Default Violence Dataset</option>\r\n                        <option value=\"extended\">Extended Violence Dataset</option>\r\n                        <option value=\"custom\">Custom Dataset</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:bg-gray-50 transition-colors\">\r\n                      <Upload className=\"mx-auto h-8 w-8 text-gray-400\" />\r\n                      <p className=\"mt-2 text-sm text-gray-600\">Upload additional training data (optional)</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {activeTraining && (\r\n                    <div className=\"space-y-4 bg-gray-50 p-4 rounded-md\">\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <h3 className=\"font-medium\">Training Progress</h3>\r\n                        <Badge>{activeTraining.progress}%</Badge>\r\n                      </div>\r\n                      <Progress value={activeTraining.progress} className=\"h-2\" />\r\n\r\n                      <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n                        <div>\r\n                          <span className=\"text-gray-500\">Epoch:</span>\r\n                          <p className=\"font-medium\">{activeTraining.epoch}/10</p>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"text-gray-500\">Loss:</span>\r\n                          <p className=\"font-medium\">{activeTraining.loss.toFixed(3)}</p>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"text-gray-500\">Accuracy:</span>\r\n                          <p className=\"font-medium\">{activeTraining.accuracy?.toFixed(1) || \"0.0\"}%</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n                <CardFooter className=\"flex justify-between\">\r\n                  {!activeTraining ? (\r\n                    <Button onClick={startTraining} className=\"w-full\">\r\n                      <Play className=\"h-4 w-4 mr-2\" />\r\n                      Start Training\r\n                    </Button>\r\n                  ) : (\r\n                    <div className=\"flex w-full space-x-4\">\r\n                      <Button variant=\"outline\" onClick={stopTraining} className=\"w-1/2\">\r\n                        <Pause className=\"h-4 w-4 mr-2\" />\r\n                        Stop Training\r\n                      </Button>\r\n                      <Button disabled={activeTraining.progress < 100} className=\"w-1/2\">\r\n                        <Save className=\"h-4 w-4 mr-2\" />\r\n                        Save Model\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </CardFooter>\r\n              </Card>\r\n            </div>\r\n\r\n            <div>\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Training Parameters</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Epochs</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={epochs}\r\n                      onChange={(e) => setEpochs(Number.parseInt(e.target.value))}\r\n                      min=\"1\"\r\n                      max=\"100\"\r\n                      className=\"w-full p-2 border rounded-md\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Batch Size</label>\r\n                    <select\r\n                      className=\"w-full p-2 border rounded-md\"\r\n                      value={batchSize}\r\n                      onChange={(e) => setBatchSize(Number.parseInt(e.target.value))}\r\n                    >\r\n                      <option value=\"8\">8</option>\r\n                      <option value=\"16\">16</option>\r\n                      <option value=\"32\">32</option>\r\n                      <option value=\"64\">64</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Learning Rate</label>\r\n                    <select className=\"w-full p-2 border rounded-md\">\r\n                      <option value=\"0.001\">0.001</option>\r\n                      <option value=\"0.0005\" selected>\r\n                        0.0005\r\n                      </option>\r\n                      <option value=\"0.0001\">0.0001</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Optimizer</label>\r\n                    <select className=\"w-full p-2 border rounded-md\">\r\n                      <option value=\"adam\" selected>\r\n                        Adam\r\n                      </option>\r\n                      <option value=\"sgd\">SGD</option>\r\n                      <option value=\"rmsprop\">RMSprop</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Data Augmentation</label>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <input type=\"checkbox\" id=\"augmentation\" defaultChecked />\r\n                      <label htmlFor=\"augmentation\">Enable</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Button variant=\"outline\" className=\"w-full\">\r\n                    <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                    Reset to Defaults\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"finetune\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Fine-tune Existing Model</CardTitle>\r\n              <CardDescription>Improve an existing model with additional training</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Select Base Model</label>\r\n                    <select className=\"w-full p-2 border rounded-md\">\r\n                      {modelFactory.getAvailableModels().map((model) => (\r\n                        <option key={model.id} value={model.id}>\r\n                          {model.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">New Model Name</label>\r\n                    <input type=\"text\" placeholder=\"Enter new model name\" className=\"w-full p-2 border rounded-md\" />\r\n                  </div>\r\n\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Training Dataset</label>\r\n                    <select className=\"w-full p-2 border rounded-md\">\r\n                      <option value=\"default\">Default Violence Dataset</option>\r\n                      <option value=\"extended\">Extended Violence Dataset</option>\r\n                      <option value=\"custom\">Custom Dataset</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Epochs</label>\r\n                    <input type=\"number\" defaultValue=\"5\" min=\"1\" max=\"50\" className=\"w-full p-2 border rounded-md\" />\r\n                  </div>\r\n\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Learning Rate</label>\r\n                    <select className=\"w-full p-2 border rounded-md\">\r\n                      <option value=\"0.001\">0.001</option>\r\n                      <option value=\"0.0005\" selected>\r\n                        0.0005\r\n                      </option>\r\n                      <option value=\"0.0001\">0.0001</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"grid w-full items-center gap-1.5\">\r\n                    <label className=\"text-sm font-medium\">Freeze Layers</label>\r\n                    <select className=\"w-full p-2 border rounded-md\">\r\n                      <option value=\"none\">None (Train All Layers)</option>\r\n                      <option value=\"partial\" selected>\r\n                        Partial (Keep Base Layers)\r\n                      </option>\r\n                      <option value=\"most\">Most (Only Train Final Layers)</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:bg-gray-50 transition-colors\">\r\n                <Upload className=\"mx-auto h-8 w-8 text-gray-400\" />\r\n                <p className=\"mt-2 text-sm text-gray-600\">Upload additional training data (optional)</p>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button className=\"w-full\">\r\n                <Play className=\"h-4 w-4 mr-2\" />\r\n                Start Fine-tuning\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"history\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Training History</CardTitle>\r\n              <CardDescription>View past training sessions and results</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"w-full border-collapse\">\r\n                    <thead>\r\n                      <tr className=\"bg-gray-100\">\r\n                        <th className=\"p-2 text-left\">Date</th>\r\n                        <th className=\"p-2 text-left\">Model</th>\r\n                        <th className=\"p-2 text-left\">Type</th>\r\n                        <th className=\"p-2 text-left\">Duration</th>\r\n                        <th className=\"p-2 text-left\">Final Accuracy</th>\r\n                        <th className=\"p-2 text-left\">Status</th>\r\n                        <th className=\"p-2 text-left\">Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {trainingSessions.map((session) => {\r\n                        const duration =\r\n                          session.endTime && session.startTime\r\n                            ? Math.round((session.endTime.getTime() - session.startTime.getTime()) / (1000 * 60))\r\n                            : 0\r\n\r\n                        const hours = Math.floor(duration / 60)\r\n                        const minutes = duration % 60\r\n                        const durationStr = `${hours}h ${minutes}m`\r\n\r\n                        return (\r\n                          <tr key={session.id} className=\"border-b\">\r\n                            <td className=\"p-2\">{session.startTime.toISOString().split(\"T\")[0]}</td>\r\n                            <td className=\"p-2\">{session.modelName}</td>\r\n                            <td className=\"p-2\">{session.type}</td>\r\n                            <td className=\"p-2\">{session.endTime ? durationStr : \"In progress\"}</td>\r\n                            <td className=\"p-2\">{session.accuracy ? `${session.accuracy.toFixed(1)}%` : \"-\"}</td>\r\n                            <td className=\"p-2\">\r\n                              <Badge\r\n                                variant={\r\n                                  session.status === \"completed\"\r\n                                    ? \"default\"\r\n                                    : session.status === \"in-progress\"\r\n                                      ? \"secondary\"\r\n                                      : \"destructive\"\r\n                                }\r\n                              >\r\n                                {session.status === \"completed\"\r\n                                  ? \"Completed\"\r\n                                  : session.status === \"in-progress\"\r\n                                    ? \"In Progress\"\r\n                                    : \"Failed\"}\r\n                              </Badge>\r\n                            </td>\r\n                            <td className=\"p-2\">\r\n                              <Button variant=\"outline\" size=\"sm\">\r\n                                View Details\r\n                              </Button>\r\n                            </td>\r\n                          </tr>\r\n                        )\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n\r\n                <div className=\"h-80 flex items-center justify-center bg-gray-100 rounded-md\">\r\n                  <div className=\"text-center\">\r\n                    <BarChart2 className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\r\n                    <p className=\"text-gray-500\">Training performance charts would be displayed here</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}